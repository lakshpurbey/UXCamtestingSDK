// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.8 (swiftlang-5.8.0.124.2 clang-1403.0.22.11.100)
// swift-module-flags: -target arm64-apple-ios17.2 -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name UXCamAnalyticSDK
// swift-module-flags-ignorable: -enable-bare-slash-regex
import Foundation
import Swift
@_exported import UXCamAnalyticSDK
import _Concurrency
import _StringProcessing
public protocol SessionDelegate : AnyObject {
  func sessionDidStart()
  func sessionDidStop()
  func sessionDidFailToStartWithError(_ error: any Swift.Error)
  func sessionDidFailToStopWithError(_ error: any Swift.Error)
}
public class SessionManager {
  weak public var delegate: (any UXCamAnalyticSDK.SessionDelegate)?
  public var currentUserID: Swift.String?
  public var isSessionActive: Swift.Bool
  final public let sessionStartTimeKey: Swift.String
  public init()
  public func startSession(withUserID userID: Swift.String)
  public func authenticateUser(userID: Swift.String)
  public func stopSession()
  public func trackEvent(_ eventName: Swift.String, properties: [Swift.String : Any])
  @objc deinit
}
public class CaptureSession : UXCamAnalyticSDK.SessionDelegate {
  public static let shared: UXCamAnalyticSDK.CaptureSession
  public init()
  public func sessionDidFailToStopWithError(_ error: any Swift.Error)
  public func sessionDidStart()
  public func sessionDidStop()
  public func sessionDidFailToStartWithError(_ error: any Swift.Error)
  public func setupSession()
  public func initializeResources()
  public func updateUI()
  @objc deinit
}
